1.数据处理：对所有数据项进行归一化（COD去除率直接除以10）
            由于计算mae的需求，我们把VFA从[0, 1]映射到了[0.1, 1]区间上
2.数据补全：对于反应器温度我们发现一定时间内反应器温度方差十分小，于是我们取给定区间并用该区间平均值填充
            我们通过比较发现当日气温对拟合结果影响很小，于是我们没有把当地气温纳入数据的维度
3.结果计算：我们横向对比了GBR和SVR的回归结果，发现无论对COD去除率还是VFA预测结果都相近。
            图里面橙色的是预测曲线，蓝色的是真实曲线，绿色的是绝对误差曲线
            (对VFA进行训练预测时不包含COD输出相关数据，对COD进行预测时不包含VFA相关数据)
            具体结果如下（按固定比例随机划分训练集与测试集，计算500次结果并取平均值）：
                 单日作为一个数据
                 VFA:
                        MAE        R^2（决定系数）
                 GBR    0.1828     0.394
                 SVR    0.1941     0.394

                 COD:
                        MAE        R^2（决定系数）
                 GBR    0.05       0.32
                 SVR    0.05       0.32

                 两天作为一个数据（包含前一天VFA）
                 VFA:
                        MAE        R^2（决定系数）
                 GBR    0.1337     0.627
                 SVR    0.1418     0.581

                 三天作为一个数据（包含前两天VFA）
                 VFA:
                        MAE        R^2（决定系数）
                 GBR    0.1318     0.626
                 SVR    0.1374     0.626

             可见当天数从1天增大到2天时，回归效果有明显增加；当从2天增加到3天时，MAE下降不明显，而GVR决定系数R^2下降，SVR决定系数小幅上升
             但是仍然可以得出VFA去除率是一个与连续时间有关的值

4.区间划分：先空着，明天讨论讨论

5.阈值：
    require full set S = {(xi,yi)}, i = 1,...,r sorted by temperature
    require tipRate
    require ScalingFactor
    require CompareRange as

    Prepare:
        for i = 1,2,...,r:
            if (xi,yi) is not a tip point which means yi+1 - yi < tipRate
                then remove it from S
        end for
    end Prepare

    now we have S={(xi,yi)}, i=1,...,n
    set i=0, temperatureSet=empty

    Search:
        for k = i,i+1,...,n-i
            if Var(yi,...yi+k) < min{Var(yi,...yi+k+1),Var(yi,...yi+k+2),...,Var(yi,...yi+k+CompareRange)}
                then add [yi,yi+k] to temperatureSet
                i = i + k
                restart Search with new i
            end if
        end for
    end Prepare

    now we have temperatureSet, and for each sub set in temperatureSet, we figure out it's 75% or 80% value Y
    and we set Y = Y * (ScalingFactor)
    then we have threshold {[Y1),[Y2),...,[Ym]} corresponding to temperature



